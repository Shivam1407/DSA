Given an integer array nums, find the 
subarray
 with the largest sum, and return its sum.

 

Example 1:

Input: nums = [-2,1,-3,4,-1,2,1,-5,4]
Output: 6
Explanation: The subarray [4,-1,2,1] has the largest sum 6.


...........................___________________________________________________________________________________________________________________________________________.................................


class Solution {
public:
    int maxSubArray(vector<int>& nums) {
        int n = nums.size();
        int maxSum = nums[0]; // Initialize maxSum with the first element of the array
        int currentSum = nums[0]; // Initialize currentSum with the first element of the array

        // Iterate over the array starting from the second element
        for(int i = 1; i < n; i++) {
            // Update currentSum: either continue the subarray or start a new subarray
            currentSum = max(nums[i], currentSum + nums[i]);
            
            // Update maxSum with the maximum value found so far
            maxSum = max(maxSum, currentSum);
        }
        return maxSum;
    }
};
